version: '3.7'
services:
#Kong setup

#kong DB
  kong-database:
    image: postgres:9.6
    restart: always
    networks:
      - monorepo_net
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 5s
      timeout: 5s
      retries: 5

#Kong migration    
  kong-migration:
    image: kong:latest
    command: "kong migrations bootstrap"
    networks:
      - monorepo_net
    restart: on-failure
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_CASSANDRA_CONTACT_POINTS: kong-database      
    links:
      - kong-database
    depends_on:
      - kong-database

#Kong API gateway
  kong:
    image: kong:latest
    restart: always
    networks:
      - monorepo_net
    environment:
      LC_CTYPE: en_US.UTF-8
      LC_ALL: en_US.UTF-8
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_ADMIN_LISTEN:  0.0.0.0:8001, 0.0.0.0:8444 ssl
    depends_on:
      - kong-migration      
    links:   
      - kong-database
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kong:8001"]
      interval: 5s
      timeout: 2s
      retries: 15
    ports:
      - 8001:8001
      - 8000:8000

# Konga database prepare
  konga-prepare:
    image: pantsel/konga:latest
    command: "-c prepare -a postgres -u postgresql://kong:kong@kong-database:5432/konga"
    networks:
      - monorepo_net
    restart: on-failure
    links:
      - kong-database
    depends_on:
      - kong-database

  #kong ui    
  konga:
    image: pantsel/konga:latest
    restart: always
    networks:
        - monorepo_net
    environment:
      DB_ADAPTER: postgres
      DB_URI: postgresql://kong:kong@kong-database:5432/konga
      NODE_ENV: development
    depends_on:
      - kong-database
    ports:
      - "1337:1337"

#vault

  vault:
    image: vault
    container_name: vault
    ports:
      - "8200:8200"
    restart: always
    volumes:
      - ./infra/vault/volumes/logs:/vault/logs
      - ./infra/vault/volumes/file:/vault/file
      - ./infra/vault/volumes/config:/vault/config
    cap_add:
      - IPC_LOCK
    entrypoint: vault server -config=/vault/config/vault.json     

#frontend service
  frontend:
        build:
          context: ./nodejs
          dockerfile: ./Dockerfile.angular
          args:
            project: frontend
        ports:
          - 8011:80
        restart: on-failure
        volumes:
          - frontend_vol:/usr/src/frontend/
          - node_modules:/usr/src/frontend/node_modules/
        networks: 
          - monorepo_net
  #users API        
  users:
      ports: 
          - 4200:3333
      build:  
        context: ./nodejs
        dockerfile:  ./Dockerfile.nest
        args: 
          project: users
      restart:  on-failure
      volumes: 
        - users_vol:/usr/src/users
        - node_modules:/usr/src/users/node_modules
      networks: 
        - monorepo_net

networks:
  monorepo_net:
    driver: bridge

volumes: 
  users_vol:
  frontend_vol:
  node_modules:  
  db-data:
